import React, { useState, useEffect } from "react";
import axios from "axios";

const AddUser = ({ reload, setReload, editingUser, setEditingUser }) => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [errors, setErrors] = useState({ name: "", email: "" }); // ‚úÖ l∆∞u l·ªói form

  const BACKEND_URL = "http://10.10.8.244:3000/users";

  // üß† Khi ch·ªçn user ƒë·ªÉ s·ª≠a ‚Üí t·ª± ƒëi·ªÅn v√†o form
  useEffect(() => {
    if (editingUser) {
      setName(editingUser.name);
      setEmail(editingUser.email);
      setErrors({ name: "", email: "" });
    } else {
      setName("");
      setEmail("");
      setErrors({ name: "", email: "" });
    }
  }, [editingUser]);

  // üìù G·ª≠i form
  const handleSubmit = async (e) => {
    e.preventDefault();

    // ‚úÖ Validation t·ª± l√†m (kh√¥ng d√πng required)
    const newErrors = { name: "", email: "" };
    if (!name.trim()) newErrors.name = "T√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!";
    if (!/\S+@\S+\.\S+/.test(email)) newErrors.email = "Email kh√¥ng h·ª£p l·ªá!";

    // N·∫øu c√≥ l·ªói ‚Üí d·ª´ng l·∫°i v√† hi·ªÉn th·ªã l·ªói
    if (newErrors.name || newErrors.email) {
      setErrors(newErrors);
      return;
    }

    try {
      if (editingUser) {
        // üß© N·∫øu ƒëang s·ª≠a ‚Üí PUT
        await axios.put(`${BACKEND_URL}/${editingUser._id}`, { name, email });
        alert("C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng th√†nh c√¥ng!");
      } else {
        // ‚ûï N·∫øu th√™m m·ªõi ‚Üí POST
        await axios.post(BACKEND_URL, { name, email });
        alert("Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng!");
      }

      setReload(!reload);
      setEditingUser(null);
      setName("");
      setEmail("");
      setErrors({ name: "", email: "" });
    } catch (err) {
      console.error("Error saving user:", err);
      alert("L·ªói khi l∆∞u ng∆∞·ªùi d√πng!");
    }
  };

  return (
    <div>
      <h2>{editingUser ? "S·ª≠a ng∆∞·ªùi d√πng" : "Th√™m ng∆∞·ªùi d√πng"}</h2>
      <form onSubmit={handleSubmit} noValidate>
        <div style={{ marginBottom: "10px" }}>
          <input
            type="text"
            placeholder="T√™n"
            value={name}
            onChange={(e) => setName(e.target.value)}
            style={{ marginRight: "10px" }}
          />
          {errors.name && <p style={{ color: "red", margin: 0 }}>{errors.name}</p>}
        </div>

        <div style={{ marginBottom: "10px" }}>
          <input
            type="email"
            placeholder="Email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            style={{ marginRight: "10px" }}
          />
          {errors.email && <p style={{ color: "red", margin: 0 }}>{errors.email}</p>}
        </div>

        <button type="submit">{editingUser ? "C·∫≠p nh·∫≠t" : "Th√™m"}</button>
        {editingUser && (
          <button
            type="button"
            onClick={() => setEditingUser(null)}
            style={{ marginLeft: "10px" }}
          >
            H·ªßy
          </button>
        )}
      </form>
    </div>
  );
};

export default AddUser;
